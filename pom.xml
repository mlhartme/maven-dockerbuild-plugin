<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.oneandone.maven.poms</groupId>
    <artifactId>lazy-foss-parent</artifactId>
    <version>1.4.2</version>
    <relativePath />
  </parent>

  <name>Maven Dockerbuild Plugin</name>
  <url>https://github.com/mlhartme/maven-dockerbuild-plugin</url>

  <description>Maven plugin to build Docker images from a Dockerfile. The main idea is to store this Dockerfile in a *dockerbuild* artifact
    and manage it centrally in your favorite Naven repository. To build an image, this plugin resolves the dockerbuild artifact, unpacks it
    into the build context directory, adds necessary artifacts, and runs a Docker build on it.
  </description>

  <groupId>net.oneandone.maven.plugins</groupId>
  <artifactId>dockerbuild</artifactId>
  <version>1.2.1</version>
  <packaging>maven-plugin</packaging>

  <scm>
    <connection>scm:git:ssh://git@github.com/mlhartme/maven-dockerbuild-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/mlhartme/maven-dockerbuild-plugin.git</developerConnection>
    <url>scm:git:ssh://git@github.com/mlhartme/maven-dockerbuild-plugin</url>
    <tag>dockerbuild-1.2.1</tag>
  </scm>

  <properties>
    <maven.version>3.3.9</maven.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java-core</artifactId>
      <version>3.2.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java-transport-zerodep</artifactId>
      <version>3.2.5</version>
    </dependency>

    <dependency>
      <groupId>net.oneandone</groupId>
      <artifactId>sushi</artifactId>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.kamranzafar</groupId>
      <artifactId>jtar</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.6.1</version>
      <!-- annotations are not needed for plugin execution so we can remove this dependency
           for execution with using provided scope -->
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven.version}</version>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
